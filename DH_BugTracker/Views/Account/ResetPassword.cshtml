@model DH_BugTracker.Models.ResetPasswordViewModel
@{
    ViewBag.Title = "Reset password";
    Layout = "~/Views/Shared/_LoginShared.cshtml";
}

<span class="login100-form-title p-b-33">
    @ViewBag.Title
</span>
@using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { @class = "form-horizontal login100-form validate-form", role = "form" }))
{
    @Html.AntiForgeryToken()
    <span class="login100-form-title p-b-33">
        Reset your password
    </span>
    @Html.ValidationSummary("", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Code)
    <div class="wrap-input100 validate-input" data-validate="Valid email is required: ex@abc.xyz">
        @Html.TextBoxFor(m => m.Email, new { @class = "form-control input100", placeholder = "Email" })
        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
        <span class="focus-input100-1"></span>
        <span class="focus-input100-2"></span>
    </div>
    <div class="wrap-input100 rs1 validate-input" data-validate="Password is required">
        @Html.PasswordFor(m => m.Password, new { @class = "form-control input100", placeholder = "Password" })
        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
        <span class="focus-input100-1"></span>
        <span class="focus-input100-2"></span>
    </div>
    <div class="wrap-input100 rs1 validate-input" data-validate="Password is required">
        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control input100", placeholder = "Confirm Password" })
        @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
        <span class="focus-input100-1"></span>
        <span class="focus-input100-2"></span>
    </div>
    <div class="container-login100-form-btn m-t-20 form-group">
        <button type="submit" class="login100-form-btn">
            Confirm
        </button>
    </div>
}
