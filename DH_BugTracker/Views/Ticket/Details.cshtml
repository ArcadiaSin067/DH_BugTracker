@using DH_BugTracker.Helpers
@model DH_BugTracker.Models.Ticket

@{
    ViewBag.Title = "Details";
}

<style>
    .allWide {
        width: 100% !important;
        max-width: 100% !important;
    }
</style>

<div class="row">
    <div class="col">
        <div class="card">
            <div class="card-header card-header-warning">
                <h4 class="card-title">@ViewBag.Title for Ticket #@Model.Id</h4>
                <p class="card-category" style="padding-left:10px">
                    <u> @Html.ActionLink("Back to List", "Index")</u> |
                    <u> @Html.ActionLink("Edit Ticket", "Edit", new { id = Model.Id })</u>
                </p>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-5">
                        <h6>@Html.DisplayName("Ticket Title")</h6>
                        <a style="padding-left:5px">@Html.DisplayFor(model => model.Title)</a>
                    </div>
                    <div class="col-md-7">
                        <h6>@Html.DisplayName("Ticket Description")</h6>
                        <a style="padding-left:5px">@Html.DisplayFor(model => model.Description)</a>
                    </div>
                </div>
                <hr />
                <div class="row">
                    <div class="col-md-5">
                        <h6>@Html.DisplayName("Assigned Developer")</h6>
                        <a style="padding-left:5px">@Html.Display("DevId")</a>
                    </div>
                    <div class="col-md-6">
                        <h6>@Html.DisplayName("Submitter")</h6>
                        <a style="padding-left:5px">@Html.DisplayFor(model => model.OwnerUser.FullName)</a>
                    </div>
                </div>
                <hr />
                <div class="row">
                    <div class="col-md-5">
                        <h6>@Html.DisplayName("Project")</h6>
                        <a style="padding-left:5px">@Html.DisplayFor(model => model.Project.Name)</a>
                    </div>
                    <div class="col-md-6">
                        <h6>@Html.DisplayNameFor(model => model.TicketPriority.Name)</h6>
                        <a style="padding-left:5px">@Html.DisplayFor(model => model.TicketPriority.Name)</a>
                    </div>
                </div>
                <hr />
                <div class="row">
                    <div class="col-md-5">
                        <h6>@Html.DisplayNameFor(model => model.TicketStatus.Name)</h6>
                        <a style="padding-left:5px">@Html.DisplayFor(model => model.TicketStatus.Name)</a>
                    </div>
                    <div class="col-md-6">
                        <h6>@Html.DisplayNameFor(model => model.TicketType.Name)</h6>
                        <a style="padding-left:5px">@Html.DisplayFor(model => model.TicketType.Name)</a>
                    </div>
                </div>
                <hr />
                <div class="row">
                    <div class="col-md-5">
                        <h6>@Html.DisplayNameFor(model => model.Created)</h6>
                        <a style="padding-left:5px">@Html.DisplayFor(model => model.Created)</a>
                    </div>
                    <div class="col-md-6">
                        <h6>@Html.DisplayNameFor(model => model.Updated)</h6>
                        <a style="padding-left:5px">@Html.DisplayFor(model => model.Updated)</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col" style="border-left:1px solid #D0D0D0">
        @using (Html.BeginForm("Create", "TicketComment", FormMethod.Post))
        {
            <br />
            <h4>Add a Comment?</h4>
            <div class="row no-gutters">
                @Html.AntiForgeryToken()
                @Html.Hidden("TicketId", Model.Id)

                <div class="col-9 offset-1" style="padding-top:8px">
                    @Html.Editor("Comment", new { htmlAttributes = new { @class = "form-control txtBoxs allWide" } })
                    @Html.ValidationMessage("Comment", "", new { @class = "text-danger" })
                </div>
                <div class="col-2" style="padding-left:10px">
                    <button type="submit" class="btn allbtn">Add</button>
                </div>
            </div>
        }
        <div class="card">
            <div class="card-header card-header-warning">
                <h4 class="card-title ">Ticket Comments</h4>
                <p class="card-category" style="padding-left:10px">All comments for this Ticket.</p>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table" id="DTJQ9">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayName("Commenter")
                                </th>
                                <th>
                                    @Html.DisplayName("Message")
                                </th>
                                <th>
                                    @Html.DisplayName("Created")
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var comment in Model.TicketComments.OrderByDescending(tc => tc.Created))
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => comment.User.FullName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => comment.Comment)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => comment.Created)
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<hr />
<div class="row">
    <div class="col">
        <div class="card">
            <div class="card-header card-header-warning">
                <h4 class="card-title ">Ticket History</h4>
                <p class="card-category" style="padding-left:10px">All History Information for this Ticket.</p>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table" id="DTJQ8">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayName("Property")
                                </th>
                                <th>
                                    @Html.DisplayName("Old Value")
                                </th>
                                <th>
                                    @Html.DisplayName("New Value")
                                </th>
                                <th>
                                    @Html.DisplayName("Date Changed")
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var history in Model.TicketHistories.OrderByDescending(th => th.Changed))
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => history.Property)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => history.OldValue)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelitem => history.NewValue)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => history.Changed)
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="col" style="border-left:1px solid #D0D0D0">
        @using (Html.BeginForm("Create", "TicketAttach", FormMethod.Post, new { enctype = "Multipart/form-data" }))
        {
            <br />
            <h4>Add an Attachment?</h4>
            <div class="row no-gutters">
                @Html.AntiForgeryToken()
                @Html.Hidden("TicketId", Model.Id)
                <div class="col-4" style="padding-right:15px">
                    <span class='label label-info' id="upload-file-info2" style="overflow-wrap:break-word;
                            font-size:14px;font-weight:400;color:#aaa;font-family:Roboto,Helvetica,Arial,sans-serif;"> Select File...</span>
                    <br />
                    <label class="btn btn-sm btn-dark" data_but="btn-xs" for="my-file-selector2">
                        <i class='fa fa-cloud-upload'></i> Upload File
                    </label>
                    @Html.TextBox("File", null, new
                    {
                        onchange = "$('#upload-file-info2').html(this.files[0].name)",
                        id = "my-file-selector2",
                        style = "display:none",
                        type = "file"
                    })
                </div>
                <div class="col-6">
                    @Html.Label("Add a Description")<br />
                    @Html.Editor("AttachDesc", new { htmlAttributes = new { @class = "form-control txtBoxs", style = "max-width:100%" } })
                    @Html.ValidationMessage("Description", "", new { @class = "text-danger" })
                </div>
                <div class="col-2" style="margin-top:22px;padding-left:10px">
                    <button type="submit" class="btn allbtn">Add</button>
                </div>
            </div>
        }
        <div class="card">
            <div class="card-header card-header-warning">
                <h4 class="card-title ">Ticket Attachments</h4>
                <p class="card-category" style="padding-left:10px">All files attached to this Ticket.</p>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table" id="DTJQ7">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayName("File")
                                </th>
                                <th>
                                    @Html.DisplayName("Uploader")
                                </th>
                                <th>
                                    @Html.DisplayName("Notes")
                                </th>
                                <th>
                                    @Html.DisplayName("Created")
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var attachment in Model.TicketAttaches.OrderByDescending(ta => ta.Created))
                            {
                                <tr>
                                    <td>
                                        <a href="@attachment.FilePath" target="_blank">
                                            <img src="@AttachmentHelper.GetIcon(attachment.FilePath)" style="width:35px" />
                                            @{var displayPath = attachment.FilePath.Split('/')[2].Split('_')[0]
                                                      + Path.GetExtension(attachment.FilePath);}
                                            @displayPath
                                        </a>
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => attachment.User.FullName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => attachment.Description)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => attachment.Created)
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>
        $('#DTJQ9, #DTJQ7, #DTJQ8').dataTable();
    </script>
}
